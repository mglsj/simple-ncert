---
import type { Props } from "@astrojs/starlight/props";
import Default from "@astrojs/starlight/components/TableOfContents.astro";
import type { TocItem } from "node_modules/@astrojs/starlight/utils/generateToC";

const { toc } = Astro.props;

console.log(toc);

function pushDown(array: TocItem[], depth: number, startIndex = 0) {
	if (array.length === 0 || depth === 5) {
		return;
	}

	// biome-ignore lint/suspicious/noConfusingLabels: <explanation>
	slicerLoop: {
		for (let i = startIndex; i < array.length; i++) {
			if (
				array[i].slug.startsWith("summary") ||
				array[i].slug.startsWith("excerise") ||
				array[i].slug.startsWith("question")
			) {
				break slicerLoop;
			}

			if (array[i].slug.startsWith("section")) {
				if (i === startIndex) {
					break slicerLoop;
				}

				const slice1 = array.slice(0, i);
				const slice2 = array.slice(i);

				for (let i = 0; i < slice1.length; i++) {
					slice1[i].depth++;
				}

				const newList = [
					{
						depth: depth,
						text: "",
						slug: "",
						children: [...slice1],
					},
					...slice2,
				];
				array.splice(0, array.length, ...newList);
				break slicerLoop;
			}
		}

		for (let i = 0; i < array.length; i++) {
			array[i].depth++;
		}
		const newList = [
			{
				depth: depth,
				text: "",
				slug: "",
				children: [...array],
			},
		];

		array.splice(0, array.length, ...newList);
	}

	for (let i = 0; i < array.length; i++) {
		if (array[i].children) {
			pushDown(array[i].children, depth + 1);
		}
	}
}

if (toc !== undefined) {
	pushDown(toc.items, 2, 1);
}

console.log(toc);
---

<Default {...Astro.props} />
